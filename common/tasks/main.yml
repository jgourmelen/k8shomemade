---
- name: Download docker install script
  get_url:
    url: https://get.docker.com
    dest: ./get-docker.sh
  when: inventory_hostname in groups['k8s_clusters']

- name: Install docker
  become: true
  shell: /bin/sh get-docker.sh
  when: inventory_hostname in groups['k8s_clusters']

- name: Adding a user to the docker group
  user:
    name: "{{ ansible_user }}"
    group: docker
    append: yes
  become: yes
  when: inventory_hostname in groups['k8s_clusters']

- name: Start and enable docker service
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes
  when: inventory_hostname in groups['k8s_clusters']

- name: Add kubernetes repository
  copy: 
    content: "[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg" 
    dest: "/etc/yum.repos.d/kubernetes.repo"
    backup: yes
    owner: root
    group: root
    mode: '0644'
  become: yes
  when: inventory_hostname in groups['k8s_masters']

- name: Install Kubernetes packages
  package:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: latest
  become: yes

- name: Enabled kubelet
  systemd:
    name: kubelet
    enabled: yes

- name: Reset Kubernetes
  shell: kubeadm reset --force
  become: yes
  register: reset_cluster
  when: inventory_hostname in groups['k8s_masters']

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded and inventory_hostname in groups['k8s_masters']
  become: yes
  shell: |
    kubeadm init --service-cidr {{ service_cidr }} \
                 --kubernetes-version {{ kube_version }} \
                 --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }} \
                 --apiserver-advertise-address {{ master_ip }} \
                 {{ kubeadm_opts }} \
                 {{ init_opts }}
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory
  when: inventory_hostname in groups['k8s_masters']

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded and inventory_hostname in groups['k8s_masters']
  become: yes
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: '0755'
    remote_src: true

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster
  become: yes
  when: inventory_hostname in groups['k8s_nodes']

- name: Reset Kubernetes component
  shell: "iptables -F && rm -rf /etc/cni/*"
  register: reset_cluster
  become: yes
  when: inventory_hostname in groups['k8s_nodes']

- name: Join to Kubernetes cluster
  when: reset_cluster is succeeded and inventory_hostname in groups['k8s_nodes']
  shell: |
    kubeadm join --token {{ token }} \
                --discovery-token-unsafe-skip-ca-verification \
                {{ master_ip }}:6443
  become: yes
  register: join_cluster

- name: Install flannel
  when: inventory_hostname in groups['k8s_masters']
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

