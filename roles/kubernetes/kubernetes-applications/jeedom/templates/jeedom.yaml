apiVersion: v1
kind: Namespace
metadata:
  name: jeedom
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jeedom
  namespace: jeedom
  labels:
    app: jeedom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jeedom
  template:
    metadata:
      labels:
        app: jeedom
    spec:
      containers:
      - name: jeedom
        image: jugou28/jeedom:latest
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
        ports:
        - containerPort: 80
        env:
        - name: TZ
          value: Europe/Paris
        volumeMounts:
            - name: jeedom
              mountPath: "/opt/jeedom/html"
            - name: ttyusb0
              mountPath: "/dev/serial/by-id/usb-Cartelectronic_Interface_USB_1_TIC_DA3P5NRA-if00-port0"
            - name: ttyusb1
              mountPath: "/dev/serial/by-id/usb-RFXCOM_RFXtrx433XL_DO3MHTT3-if00-port0"
      volumes:
      - name: jeedom
        persistentVolumeClaim:
          claimName: jeedom
      - name: ttyusb0
        hostPath:
          path: /dev/serial/by-id/usb-Cartelectronic_Interface_USB_1_TIC_DA3P5NRA-if00-port0
      - name: ttyusb1
        hostPath:
          path: /dev/serial/by-id/usb-RFXCOM_RFXtrx433XL_DO3MHTT3-if00-port0
      nodeSelector:
        kubernetes.io/hostname: domotique
---
apiVersion: v1
kind: Service
metadata:
  name: jeedom
  namespace: jeedom
spec:
  selector:
    app: jeedom
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jeedom
  namespace: jeedom
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-k8shomemade
spec:
  rules:
  - host: jeedom.jugou28.com
    http:
      paths:
      - path: /
        backend:
          serviceName: jeedom
          servicePort: 80
  tls: # < placing a host in the TLS config will indicate a certificate should be created
  - hosts:
    - jeedom.jugou28.com
    secretName: jeedom-cert # < cert-manager will store the created certificate in this secret.

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jeedom 
spec:
  capacity:
    storage: 5Gi 
  accessModes:
  - ReadWriteOnce 
  nfs: 
    path: /volume3/workspace/jeedom
    server: 192.168.1.50
  persistentVolumeReclaimPolicy: Retain 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jeedom
  namespace: jeedom
spec:
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
      storage: 1Gi 

