---
- name: Update all packages to the latest version
  package:
    name:
      - "*"
    state: latest
  become: yes

- name: Install Epel for centos release
  package:
    name:
      - epel-release
    state: latest
  become: yes
  when: ansible_distribution == "CentOS"

- name: Install packages
  package:
    name:
      - python3
      - python3-pip
      - python3-setuptools
      - rsync
    state: latest
  become: yes

- name: Install packages fot no-centos
  package:
    name:
      - python3-pkg-resources
    state: latest
  become: yes
  when: ansible_distribution not in "CentOS"

- name: install pip
  pip:
    name: pip
    executable: pip3
    state: latest
  become: yes

# - name: Disable system swap
#   shell: "swapoff -a"

# - name: Remove current swaps from fstab
#   lineinfile:
#     dest: /etc/fstab
#     regexp: '(?i)^([^#][\S]+\s+(none|swap)\s+swap.*)'
#     line: '# \1'
#     backrefs: yes
#     state: present
#   become: true

# - name: Disable swappiness and pass bridged IPv4 traffic to iptable's chains
#   sysctl:
#     name: "{{ item.name }}"
#     value: "{{ item.value }}"
#     state: present
#   with_items:
#     - { name: 'vm.swappiness', value: '0' }
#     - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
#   become: true

# - name: Install metallb
#   when: inventory_hostname in groups['k8s_masters']
#   shell: |
#     kubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.8.3/manifests/metallb.yaml
#   tags: metallb

# - name: "Create configmap metallb"
#   when: inventory_hostname in groups['k8s_masters']
#   template:
#     src: metallb-layer-2-config.yml.j2
#     dest: "/tmp/metallb-layer-2-config.yml"
#   tags: metallb

# - name: "Create MetalLB configmap in kubernetes"
#   when: inventory_hostname in groups['k8s_masters']
#   shell: "kubectl apply -f /tmp/metallb-layer-2-config.yml"
#   tags: metallb

# - name: "Install Traefik"
#   shell: "helm install traefik traefik/traefik --namespace kube-system"
#   when: inventory_hostname in groups['k8s_masters']

# - name: "Install nginx-ingress"
#   shell: "helm install nginx-ingress stable/nginx-ingress --namespace kube-system"
#   when: inventory_hostname in groups['k8s_masters']

# - name: "Install home-assistant"
#   shell: "helm install home-assistant stable/home-assistant"
#   when: inventory_hostname in groups['k8s_masters']
