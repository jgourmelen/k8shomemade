---
- debug:
    msg:
      - "System: {{ inventory_hostname }}"
      - "Architecture: {{ ansible_architecture }}"
      - " OS Family: {{ ansible_os_family }}"
      - "OS: {{ ansible_distribution}}"
      - "Release: {{ ansible_distribution_release}}"
      - "Version: {{ ansible_distribution_version}}"
      - "Gateway: {{ ansible_default_ipv4.gateway }}"
      - "@IP: {{ ansible_default_ipv4.address }}"
      - "@MAC: {{ ansible_default_ipv4.macaddress }}"
      - "@Network: {{ ansible_default_ipv4.network }}"
      - "@Type: {{ ansible_default_ipv4.type }}"
      - "@Alias: {{ ansible_default_ipv4.alias }}"
      - "Package Managment: {{ ansible_pkg_mgr }}"

- name : Wheel configuration (sudoers passwordless)
  block:
  - name: Make sure we have a 'wheel' group
    group:
      name: wheel
      state: present
  
  - name: sudo without password for wheel group
    copy:
      content: '%wheel ALL=(ALL:ALL) NOPASSWD:ALL'
      dest: /etc/sudoers.d/wheel_nopasswd
      mode: 0440

  # - name: Allow 'wheel' group to have passwordless sudo
  #   lineinfile:
  #     dest: /etc/sudoers
  #     state: present
  #     regexp: '^%wheel'
  #     line: '%wheel ALL=(ALL) NOPASSWD: ALL'
  #     validate: 'visudo -cf %s'
  
  - name: Add sudoers users to wheel group
    user: name=jugou28 groups=wheel append=yes state=present createhome=yes
  
  
  - name: Set up authorized keys for the deployer user
    authorized_key: user=jugou28 key="{{item}}"
    with_file:
      - ~/.ssh/id_rsa.pub
  become: yes

- name: Update cache
  block:
  - name: Update yum cache
    yum:
      update_cache: true
    when: ansible_pkg_mgr == "yum"
  - name: Update dnf cache
    dnf:
      update_cache: true
    when: ansible_pkg_mgr == "dnf"
  - name: Update apt cache
    apt:
      update_cache: true
    when: ansible_pkg_mgr == "apt"
  become: yes

- name: Update all packages to the latest version
  package:
    name:
      - "*"
    state: latest
  become: yes
  ignore_errors: True

- name: Install Epel for CentOs release
  package:
    name:
      - epel-release
    state: latest
  become: yes
  when: ansible_distribution == "CentOS"

- name: Install packages
  package:
    name:
      - cockpit
      - htop
      - python3
      - python3-pip
      - python3-setuptools
      - python3-virtualenv
      - rsync
      - vim
    state: latest
  become: yes

- name: Install packages for no CentOS
  package:
    name:
      - python3-pkg-resources
      - python3-selinux
    state: latest
  become: yes
  when: ansible_distribution not in "CentOS" and ansible_distribution not in "Fedora"

- name: install pip
  pip:
    name: pip
    executable: pip3
    state: latest
  become: yes
